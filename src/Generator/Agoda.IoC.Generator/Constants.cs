using Agoda.IoC.Generator.Abstractions;

namespace Agoda.IoC.Generator;

internal sealed class Constants
{
    internal static string RegisterTransientAttributeName = typeof(RegisterTransientAttribute).FullName;
    internal static string RegisterPerRequestAttributeName = typeof(RegisterPerRequestAttribute).FullName;
    internal static string RegisterScopedAttributeName = typeof(RegisterScopedAttribute).FullName;
    internal static string RegisterSingletonAttributeName = typeof(RegisterSingletonAttribute).FullName;

    internal static Dictionary<string, RegistrationType> AttributeRegistrationTypes = new()
    {
        [RegisterTransientAttributeName] = RegistrationType.Transient,
        [RegisterScopedAttributeName] = RegistrationType.Scoped,
        [RegisterPerRequestAttributeName] = RegistrationType.Scoped,
        [RegisterSingletonAttributeName] = RegistrationType.Singleton
    };

    internal const string GENERATE_SINGLETON_SOURCE = "serviceCollection.AddSingleton<{0}>();";
    internal const string GENERATE_SINGLETON_IMPLEMENTATION_FACTORY = "serviceCollection.AddSingleton({0});";
    internal const string GENERATE_SINGLETON_OPEN_GENERIC_SOURCE = "serviceCollection.AddSingleton(typeof({0}));";
    internal const string GENERATE_SINGLETON_INTERFACE_SOURCE = "serviceCollection.AddSingleton<{0}, {1}>();";
    internal const string GENERATE_SINGLETON_INTERFACE_OPEN_GENERIC_SOURCE = "serviceCollection.AddSingleton(typeof({0}),typeof({1}));";
    internal const string GENERATE_REPLACE_SINGLETON_SOURCE = "serviceCollection.Replace(new ServiceDescriptor(typeof({0}), ServiceLifetime.Singleton));";
    internal const string GENERATE_REPLACE_SINGLETON_INTERFACE_SOURCE = "serviceCollection.Replace(new ServiceDescriptor(typeof({0}), typeof({1}), ServiceLifetime.Singleton));";

    internal const string GENERATE_SCOPED_SOURCE = "serviceCollection.AddScoped<{0}>();";
    internal const string GENERATE_SCOPED_IMPLEMENTATION_FACTORY = "serviceCollection.AddScoped({0});";
    internal const string GENERATE_SCOPED_OPEN_GENERIC_SOURCE = "serviceCollection.AddScoped(typeof({0}));";
    internal const string GENERATE_SCOPED_INTERFACE_SOURCE = "serviceCollection.AddScoped<{0}, {1}>();";
    internal const string GENERATE_SCOPED_INTERFACE_OPEN_GENERIC_SOURCE = "serviceCollection.AddScoped(typeof({0}),typeof({1}));";
    internal const string GENERATE_REPLACE_SCOPED_INTERFACE_SOURCE = "serviceCollection.Replace(new ServiceDescriptor(typeof({0}), typeof({1}), ServiceLifetime.Scoped));";
    internal const string GENERATE_REPLACE_SCOPED_SOURCE = "serviceCollection.Replace(new ServiceDescriptor(typeof({0}), ServiceLifetime.Scoped));";

    internal const string GENERATE_TRANSIENT_SOURCE = "serviceCollection.AddTransient<{0}>();";
    internal const string GENERATE_TRANSIENT_IMPLEMENTATION_FACTORY = "serviceCollection.AddTransient({0});";
    internal const string GENERATE_TRANSIENT_INTERFACE_SOURCE = "serviceCollection.AddTransient<{0}, {1}>();";
    internal const string GENERATE_TRANSIENT_OPEN_GENERIC_SOURCE = "serviceCollection.AddTransient(typeof({0}));";
    internal const string GENERATE_TRANSIENT_INTERFACE_OPEN_GENERIC_SOURCE = "serviceCollection.AddTransient(typeof({0}),typeof({1}));";
    internal const string GENERATE_REPLACE_TRANSIENT_SOURCE = "serviceCollection.Replace(new ServiceDescriptor(typeof({0}), ServiceLifetime.Transient));";
    internal const string GENERATE_REPLACE_TRANSIENT_INTERFACE_SOURCE = "serviceCollection.Replace(new ServiceDescriptor(typeof({0}), typeof({1}), ServiceLifetime.Transient));";

    internal const string IMPLEMENTATION_FACTORY_INTERFACE = "Agoda.IoC.Generator.Abstractions.IImplementationFactory<T>";
    internal const string GENERATE_HOSTED_SERVICE_SOURCE = "serviceCollection.AddHostedService<{0}>();";

    internal const string GENERATE_CLASS_SOURCE = @"// <auto-generated>
//     Automatically generated by Agoda.IoC.Generator.
//     Changes made to this file may be lost and may cause undesirable behavior.
// </auto-generated>
using Microsoft.Extensions.DependencyInjection.Extensions;
{0}
namespace Microsoft.Extensions.DependencyInjection
{
    public static class AgodaIoCGeneratorInjectServiceCollectionExtension
    {
        public static IServiceCollection RegisterFrom{1}(this IServiceCollection serviceCollection)
        {
            return Register(serviceCollection);
        }

        internal static IServiceCollection Register(this IServiceCollection serviceCollection)
        {
{2}
            return serviceCollection;
        }
    }
}";
}


